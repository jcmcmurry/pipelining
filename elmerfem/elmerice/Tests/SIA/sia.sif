check keywords warn

$L = 160.0e3
$Slope = 0.5 * pi / 180.0

$yearinsec = 365.25*24*60*60
$rhoi = 900.0/(1.0e6*yearinsec^2)   
$gravity = -9.81*yearinsec^2
$n = 3.0
$eta = (2.0*100.0)^(-1.0/n)

Header
  Mesh DB "." "mesh_A"
End

Constants
  Gas Constant = Real 8.314 !Joule/mol x  K 
  Stefan Boltzmann = Real 6.78e-08
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System  = Cartesian 3D 
  Coordinate Mapping(3) = Integer 1 2 3
  Simulation Type = Steady State

  Extruded Mesh Levels = Integer 16

  Output Intervals = 1

  Steady State Max Iterations = 1
  Steady State Min Iterations = 1
  Post File = "result.vtu"
  max output level = 4
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body 1
  Equation = 1
  Body Force = 1
  Material = 1
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1 = Real 0.0                          
  Flow BodyForce 2 = Real 0.0                          
  Flow BodyForce 3 = Real -9.7696e15  !MPa - a - m
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! ice material properties in MPa - m - a system 
Material 1
  Density = Real $rhoi 
  Viscosity Model = String "power law"
  Viscosity = Real $eta                       
  Viscosity Exponent = Real $1.0/n                
  Critical Shear Rate = Real 1.0e-10
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 1  
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"
  Active Coordinate = Integer 3

  Mesh Velocity Variable = String "dSdt"
  Mesh Update Variable = String "dS"
  Mesh Velocity First Zero = Logical True
End

Solver 2
  Equation = "Flowdepth"
   Procedure = File "ElmerIceSolvers" "FlowDepthSolver"
   Variable = String "Depth"
   Variable DOFs = 1
   Linear System Solver = "Direct"
   Linear System Direct Method = umfpack
   ! this sets the direction
   ! -1 is negative z-direction (upside down)
   ! +1 is positive (downside up)
   Gradient = Real -1.0E00
  ! switch that to True, if you
  ! want to have free surface gradients
  ! to be computed
  !------------------------------------
  Calc Free Surface = Logical True
  ! will contain the variable of the corresponding free surface position
  !---------------------------------------------------------------------
  Exported Variable 1 = String "FreeSurf"
  Exported Variable 1 DOFs = 1
  FreeSurf Name = String "FreeSurf"
  ! next two will contain values of the free surface gradient
  ! nice to be used in post-processing for evaluation of the
  ! surface mass balance in diagnostic runs
  !----------------------------------------------------------
  Exported Variable 2 = -dofs 1 "FreeSurfGrad1"
  Exported Variable 3 = -dofs 1 "FreeSurfGrad2"

  Exported Variable 4 = -dofs 1 "dSdt" 
  Exported Variable 5 = -dofs 1 "dS" 
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! Dummy solver just here to declare SIAFlow 
! as a true variable (not an exported variable)
! to allow access to previous values
Solver 3
  Equation = "SIA Variable"
  Procedure = File "ElmerIceSolvers" "SIAVariable"
  !Variable = "SIAFlow"
  !Variable DOFs = 4
  Variable = "SIAFlow"[Velo:3 pres:1]
  Variable DOFs = 4
End

Solver 4
  Equation = "SIA"
  Procedure = File "ElmerIceSolvers" "SIASolver"
  Variable = -nooutput "SIAvar"
  Variable DOFs = 1

  Linear System Solver = "Direct"
  Linear System Direct Method = umfpack

  Steady State Convergence Tolerance = Real 1.0e-3
End

Solver 5
  Exec Solver = After All
  Equation = SaveScalars
  Procedure = File "SaveData" "SaveScalars"
  Filename = "results.dat"
  Variable 1 = String "Time"
  Variable 2 = String "Depth"
  Operator 2 = String "int"
  Variable 3 = String "Depth"
  Operator 3 = String "max"
  Variable 4 = String "Depth"
  Operator 4 = String "min"
  Operator 5 = String "cpu time"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Equation 1
  Active Solvers (5)= 1 2 3 4 5 
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



!!! BC en bas (y=y0)    
Boundary Condition 1
  Target Boundaries = 1
End

!!! BC à droite (x=xmax) 
Boundary Condition 2
  Target Boundaries = 2
  Periodic BC = 4 
  Periodic BC Translate(3) =  $L  0.0  0.0  
  Periodic BC SIAFlow 1  = Logical True
  Periodic BC SIAFlow 2  = Logical True
  Periodic BC SIAFlow 3  = Logical True
  Periodic BC SIAFlow 4 = Logical True
End

!!! BC en haut (y=ymax)   
Boundary Condition 3
  Target Boundaries = 3
  Periodic BC = 1 
  Periodic BC Translate(3) = 0.0  $L  0.0 
  Periodic BC SIAFlow 1  = Logical True
  Periodic BC SIAFlow 2  = Logical True
  Periodic BC SIAFlow 3  = Logical True
  Periodic BC SIAFlwo 4 = Logical True
End

!!! BC à gauche  (x=x0) 
Boundary Condition 4
  Target Boundaries = 4
End

!!! bedrock
Boundary Condition 5
  SIAFlow 1 = Real 0.0e0
  SIAFlow 2 = Real 0.0e0
  SIAFlow 3 = Real 0.0e0

  Bottom Surface = Variable Coordinate 1, Coordinate 2
     Real MATC "-tx(0)*tan(Slope)-1000.0+500.0*sin(2.0*pi*tx(0)/L)*sin(2.0*pi*tx(1)/L)"
End

!!! free surface
Boundary Condition 6
  Save Line = Logical True
  SIAFlow 4 = real 0.0
  Depth = real 0.0

  Top Surface = Variable Coordinate 1
     Real MATC "-tx*tan(Slope)"
End

Solver 4 :: Reference Norm = Real 5.3265329
Solver 4 :: Reference Norm Tolerance = Real 1E-06
$fprintf( stderr, "TEST CASE 1\n");
RUN
$fprintf( stderr, "END TEST CASE 1: Target NRM=5.3265329,EPS=1E-06\n" );
